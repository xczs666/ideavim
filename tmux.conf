# truecolor support
set-option -ga terminal-overrides ",xterm-256color:Tc"
# default terminal is 256 colors
set -g default-terminal "screen-256color"

# 增加历史容量
set -g history-limit 50000

set -g prefix C-a
unbind C-b
bind-key C-a send-prefix

unbind %
bind \\ split-window -h -c "#{pane_current_path}"

unbind '"'
bind - split-window -v -c "#{pane_current_path}"

bind c new-window -c "#{pane_current_path}"

unbind r
bind r source-file ~/.tmux.conf

set -g status-right '%Y-%m-%d %H:%M:%S'

# set -sg escape-time 20
set -sg escape-time 0
# 默认布局
setw -g aggressive-resize off
# 放大时保留其他屏示意 even-horizontal、even-vertical、main-horizontal 或 main-vertical
bind-key -n C-z resize-pane -Z \; select-layout main-horizontal

bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5

bind -r m resize-pane -Z

set -g mouse on

# start with window 1 (instead of 0)
set -g base-index 1
# start with pane 1
set -g pane-base-index 1

# default pane layouts
bind + select-layout main-horizontal
bind = select-layout main-vertical
# Rotate panes
bind -r o rotate-window

set-window-option -g mode-keys vi

# 在 iTerm2 中将 tmux 窗口标题视为选项卡/窗口标题
set-option -g set-titles on
set-option -g set-titles-string '#T'

set-option -g allow-passthrough on
set-option -g focus-events on

set -g status-keys vi
set -g mode-keys vi

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi C-v send -X rectangle-toggle
# copy text in copy mode
#bind-key -T copy-mode-vi 'y' send -X copy-selection
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel

#unbind -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
#bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"


# renumber windows sequentially after closing any of them
set-option -g renumber-windows on

# auto window rename
set-option -g automatic-rename on
# enable activity alerts
set-window-option -g monitor-activity off
set-option -g visual-activity off
# enable clipboard
set-option -g set-clipboard on

# remove confirmation questions when closing windows/panes
bind-key x kill-pane
bind-key & kill-window

# go to last window
bind-key ^ last-window

#setw -g mode-style fg=#e9eef9,bg=#312D45

# move panes to another window
bind-key M-1 join-pane -t :1
bind-key M-2 join-pane -t :2
bind-key M-3 join-pane -t :3
bind-key M-4 join-pane -t :4
bind-key M-5 join-pane -t :5
bind-key M-6 join-pane -t :6
bind-key M-7 join-pane -t :7
bind-key M-8 join-pane -t :8
bind-key M-9 join-pane -t :9

# Toggle popup window
bind-key -N 'Toggle popup window' C-t if-shell -F '#{==:#{session_name},popup}' {
    detach-client
} {
    display-popup -d "#{pane_current_path}" -xC -yC -w 80% -h 75% -E 'tmux attach-session -t popup || tmux new-session -s popup'
}

# popup window for finding command to run
bind-key R display-popup -E "tmux-commands | xargs -I{} tmux send-keys '{}' enter"
bind-key C display-popup -E "tmux-commands | xargs tmux new-window -c '#{pane_current_path}'"
bind-key | display-popup -E "tmux-commands | xargs tmux split-window -v -c '#{pane_current_path}'"
bind-key - display-popup -E "tmux-commands | xargs tmux split-window -h -c '#{pane_current_path}'"

# popup window for finding session to switch
bind-key S display-popup -E "tmux-sessions | xargs tmux switch-client -t"
bind-key P if-shell -F '#{==:#{session_name},popup}' {
  detach-client
} {
  if-shell -F '#{e|==:#{N/s:popup},0}' {
    new-session -d -s 'popup' 'tmux source-file ~/.dotfiles/tmux/sessions/popup.tmux.conf'
  }
  display-popup -w 80% -h 80% -E "tmux attach-session -t popup"
}

## shortcut for synchronize-panes toggle
#bind-key y set-window-option synchronize-panes
#
## status bar
#if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
#set-hook -g window-linked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
#set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
#
#set-option -g status-interval 1
#set-option -g status-position bottom
#set-option -g status-justify left
#set-option -g status-style none
#
## status bar left right hidden
#set-option -g status-left ""
#set-option -g status-right ""
## window bar style
#set-option -g status off
#set-option -g window-status-style "fg=#16151B,bg=#16151B"
#set-option -g window-status-current-style "fg=#edecee,bg=#49556a"
#set-option -g window-status-activity-style "fg=#edecee,bg=#16151B"
#
#set-option -g window-status-format '#[fg=#edecee]  #I  '
#set-option -g window-status-current-format '#[fg=#edecee]  #I  '
#set-option -g window-status-separator ''

# tpm plugin
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
set -g @plugin 'tmux-plugins/tpm'

# list of tmux plugins
set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @plugin 'jimeh/tmux-themepack'
set -g @themepack 'powerline/default/cyan'


# <c-s> <c-r>
set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions for you every 15 minuts
# 1. [默认]每隔15分钟自动保存，当然你可以连按两次<prefix>键手动保存
# 2. [需要设置]通电后自动打开tmux
# 3. 开启tmux后自动恢复上一个保存的环境
set -g @continuum-restore 'on'

set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restart
# 4.保存终端里的内容
set -g @resurrect-capture-pane-contents 'on'
# 5.for vim
set -g @resurrect-strategy-vim 'session'
# 6.for neovim
set -g @resurrect-strategy-nvim 'session'

# set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'sainnhe/tmux-fzf'
TMUX_FZF_OPTIONS="-p -w 80% -h 76% -m"
TMUX_FZF_LAUNCH_KEY="f"
lMUX_FZF_ORDER="session|pane|command|keybinding|window"
TMUX_FZF_PANE_FORMAT="#{p15:#{b:pane_current_path}} :: #{pane_current_command}"
# press <prefix-I> after add/delete plugin
########################## 🔼 TPM 🔼 ##########################
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
